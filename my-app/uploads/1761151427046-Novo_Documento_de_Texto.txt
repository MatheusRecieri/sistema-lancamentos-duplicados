import js from "@eslint/js";
import globals from "globals";
import pluginReact from "eslint-plugin-react";
import babelParser from "@babel/eslint-parser";
import eslintPluginPrettier from "eslint-plugin-prettier";
import reactHooksPlugin from "eslint-plugin-react-hooks";
import { defineConfig } from "eslint/config";

console.log('ESlint config load');

export default defineConfig([
  {
    files: ["**/*.{js,mjs,cjs,jsx}"],
    languageOptions: {
      globals: globals.browser,
      parser: babelParser,
      parserOptions: {
        ecmaVersion: "latest",
        sourceType: "module",
        ecmaFeatures: { jsx: true },
        requireConfigFle: false,
        babelOptions:{ pressets: ["@babel/presset-react"] }
      },
    },
    plugins: {
      react: pluginReact,
      prettier: eslintPluginPrettier,
      "react-hooks": reactHooksPlugin,
    },
    rules: {
      "prettier/prettier": "error",
      "react/react-in-jsx-scope": "off",
      "react/react-in-jsx-scope": "off",
      "react/jsx-filename-extension": [1, { "extensions": [".js", ".jsx"] }], // Corrigido
      "react-hooks/rules-of-hooks": "error",
      "react-hooks/exhaustive-deps": "warn",
    },
    settings: {
      react: {
        version: "detect"
      }
    }
  },
  js.configs.recommended,
  pluginReact.configs.flat.recommended,

]);


import os
from services.file_scanner import scan_and_split_by_type
from services.extractor_pdf import extract_pdf_data

def run_full_pipeline(base_path: str):
    print("=" * 80)
    print("🚀 Iniciando pipeline completo de processamento de PDFs...")
    print("=" * 80)
    print(f"📂 Diretório base: {base_path}")
    print()

    # 1️⃣ Etapa: Escanear e separar PDFs por tipo
    print("🔍 Escaneando diretórios e separando PDFs por tipo...")
    organized_files = scan_and_split_by_type(base_path)

    if not organized_files:
        print("⚠️ Nenhum arquivo PDF encontrado ou processado.")
        return

    print(f"✅ {len(organized_files)} arquivos foram organizados com sucesso!\n")

    # 2️⃣ Etapa: Extração de informações de cada PDF
    print("📄 Extraindo dados dos arquivos organizados...\n")

    results = []
    for file_path in organized_files:
        data = extract_pdf_data(file_path)
        results.append(data)

    # 3️⃣ Exibir resultado final formatado
    print("=" * 80)
    print("📊 RESULTADOS FINAIS:")
    print("=" * 80)

    for info in results:
        print(f"📁 Arquivo: {os.path.basename(info.get('arquivo', 'Desconhecido'))}")
        print(f"📌 Tipo: {info.get('tipo', 'Desconhecido')}")
        print(f"💰 Valor: {info.get('valor', 'N/A')}")
        print(f"📅 Data: {info.get('data', 'N/A')}")
        print("-" * 80)

    print("🏁 Pipeline concluído com sucesso!")



if __name__ == "__main__":
    # 🔧 Caminho de exemplo (ajuste conforme sua estrutura)
    base_directory = r"C:/Users/matheus.recieri/Desktop/testes_pdf - 04"
    
    run_full_pipeline(base_directory)
